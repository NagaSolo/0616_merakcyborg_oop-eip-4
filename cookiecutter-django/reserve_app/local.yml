version: '3'

volumes:
  local_reserve_postgres_data: {}
  local_reserve_postgres_data_backups: {}
  # local_reserve_hasura_migrations: {}
  # local_reserve_hasura_metadata: {}
  local_reserve_meilisearch: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: reserve_app_local_django
    container_name: django
    depends_on:
      - postgres
      - mailhog
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: reserve_app_production_postgres
    container_name: postgres
    volumes:
      - local_reserve_postgres_data:/var/lib/postgresql/data:Z
      - local_reserve_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.local/.postgres

  # hasura:
  #   build:
  #     context: .
  #     dockerfile: ./compose/local/hasura/Dockerfile
  #   image: reserve_app_local_hasura
  #   container_name: hasura
  #   volumes:
  #     - local_reserve_hasura_migrations:/hasura-migrations
  #     - local_reserve_hasura_metadata:/hasura-metadata
  #   restart: always
  #   depends_on:
  #     - 'postgres'
  #     - 'django'
  #   env_file:
  #     - ./.envs/.local/.hasura
  #   ports:
  #     - "8181:8080"
      
  graphql-engine:
    build:
      context: .
      dockerfile: ./compose/local/hasura/Dockerfile
    image: bantut_django_local_graphql
    container_name: hasura  
    ports:  
    - "8181:8080"
    depends_on:
      - "postgres"
    restart: always
    env_file:
      - ./.envs/.local/.hasura

  meilisearch:
    build:
      context: .
      dockerfile: ./compose/production/meilisearch/Dockerfile
    image: reserve_app_production_meilisearch
    volumes:
      - local_reserve_meilisearch/data.ms:/data.ms
    ports:
      - "7700:7700"

  docs:
    image: reserve_app_local_docs
    container_name: docs
    build:
      context: .
      dockerfile: ./compose/local/docs/Dockerfile
    env_file:
      - ./.envs/.local/.django
    volumes:
      - ./docs:/docs:z
      - ./config:/app/config:z
      - ./reserve_app:/app/reserve_app:z
    ports:
      - "7000:7000"
    command: /start-docs

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: mailhog
    ports:
      - "8025:8025"

  redis:
    image: redis:5.0
    container_name: redis

  celeryworker:
    <<: *django
    image: reserve_app_local_celeryworker
    container_name: celeryworker
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: reserve_app_local_celerybeat
    container_name: celerybeat
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: reserve_app_local_flower
    container_name: flower
    ports:
      - "5555:5555"
    command: /start-flower
